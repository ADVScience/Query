#Для каждого дня недели в таблицах orders и user_actions рассчитайте следующие показатели:
Выручку на пользователя (ARPU).
Выручку на платящего пользователя (ARPPU).
Выручку на заказ (AOV).

with
paying_users_table as (
SELECT to_char(time, 'Day') as weekday, date_part('isodow',time::date) AS weekday_number, count(DISTINCT user_id) as paying_users
FROM user_actions
WHERE order_id NOT IN ( SELECT order_id FROM user_actions WHERE action= 'cancel_order') 
and time::date >= '2022-08-26' and time::date <= '2022-09-09'
GROUP BY date_part('isodow',time::date), to_char(time, 'Day')
),

total_users_table as (
SELECT date_part('isodow',time::date) AS weekday_number, COUNT(DISTINCT user_id) as total_users
FROM user_actions
WHERE time::date >= '2022-08-26' and time::date <= '2022-09-09'
GROUP BY date_part('isodow',time::date)),

pivot_users_table as (
SELECT weekday, weekday_number, paying_users, total_users
FROM paying_users_table 
LEFT JOIN total_users_table USING(weekday_number)),

unnest_prod_table as (
SELECT date_part('isodow',creation_time::date) as weekday_number, order_id, UNNEST(product_ids) AS product_id
FROM orders
WHERE creation_time::date >= '2022-08-26' and creation_time::date <= '2022-09-09'),

price_of_products_table as (
SELECT price, product_id
FROM products),

total_price_per_day_table as (
SELECT weekday_number, sum(price) AS revenue, COUNT(DISTINCT order_id) AS count_orders FROM
unnest_prod_table
LEFT JOIN price_of_products_table USING(product_id)
WHERE order_id NOT IN ( SELECT order_id FROM user_actions WHERE action= 'cancel_order')
GROUP BY weekday_number
ORDER BY weekday_number)

SELECT weekday, weekday_number,
ROUND((revenue::DECIMAL/total_users),2) AS arpu, 
ROUND((revenue::DECIMAL/paying_users),2) AS arppu, 
ROUND((revenue::DECIMAL/count_orders),2) AS aov
FROM pivot_users_table 
LEFT JOIN total_price_per_day_table USING(weekday_number)
ORDER BY weekday_number

#Второй варинат:
SELECT weekday,
       t1.weekday_number as weekday_number,
       round(revenue::decimal / users, 2) as arpu,
       round(revenue::decimal / paying_users, 2) as arppu,
       round(revenue::decimal / orders, 2) as aov
FROM   (SELECT to_char(creation_time, 'Day') as weekday,
               max(date_part('isodow', creation_time)) as weekday_number,
               count(distinct order_id) as orders,
               sum(price) as revenue
        FROM   (SELECT order_id,
                       creation_time,
                       unnest(product_ids) as product_id
                FROM   orders
                WHERE  order_id not in (SELECT order_id
                                        FROM   user_actions
                                        WHERE  action = 'cancel_order')
                   and creation_time >= '2022-08-26'
                   and creation_time < '2022-09-09') t4
            LEFT JOIN products using(product_id)
        GROUP BY weekday) t1
    LEFT JOIN (SELECT to_char(time, 'Day') as weekday,
                      max(date_part('isodow', time)) as weekday_number,
                      count(distinct user_id) as users
               FROM   user_actions
               WHERE  time >= '2022-08-26'
                  and time < '2022-09-09'
               GROUP BY weekday) t2 using (weekday)
    LEFT JOIN (SELECT to_char(time, 'Day') as weekday,
                      max(date_part('isodow', time)) as weekday_number,
                      count(distinct user_id) as paying_users
               FROM   user_actions
               WHERE  order_id not in (SELECT order_id
                                       FROM   user_actions
                                       WHERE  action = 'cancel_order')
                  and time >= '2022-08-26'
                  and time < '2022-09-09'
               GROUP BY weekday) t3 using (weekday)
ORDER BY weekday_number


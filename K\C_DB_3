#Для каждого дня, представленного в таблицах user_actions и courier_actions, рассчитайте следующие показатели:
Число платящих пользователей.
Число активных курьеров.
Долю платящих пользователей в общем числе пользователей на текущий день.
Долю активных курьеров в общем числе курьеров на текущий день.

with
new_users_table as (
select min(date) as date, user_id from
(
SELECT 
time::date as date, action,
count(order_id) over (partition by user_id order by time) as count_ord,
user_id
from user_actions
) t1
group by user_id
order by user_id
),
new_users_count as (
SELECT date, count(user_id) new_users
from new_users_table
group by date
order by date
),
new_courier_table as (
select min(date) as date, courier_id from
(
SELECT 
time::date as date, action,
count(order_id) over (partition by courier_id order by time) as count_ord,
courier_id
from courier_actions
) t2
group by courier_id
order by courier_id
),
new_courier_count as (
SELECT date, count(courier_id) new_couriers
from new_courier_table
group by date
order by date
),
total_new_table as (
select date, new_users, new_couriers,
SUM(new_users) OVER (ORDER BY DATE )::integer AS total_users,
SUM(new_couriers) OVER (ORDER BY DATE )::integer AS total_couriers
from new_users_count join new_courier_count using(date)
),
paying_users_table as (
SELECT date(time) AS date, COUNT(DISTINCT user_id) as paying_users
FROM user_actions
WHERE order_id NOT IN ( SELECT order_id FROM user_actions WHERE action= 'cancel_order')
GROUP BY date(time)
ORDER BY date
), 
total_user_table as (
SELECT date(time) AS date, COUNT(DISTINCT user_id) as total_users
FROM user_actions
GROUP BY date(time)
ORDER BY date
),
active_couriers_table as (
SELECT date(time) AS date, COUNT(DISTINCT courier_id) as active_couriers
FROM courier_actions
WHERE order_id IN ( SELECT order_id FROM courier_actions WHERE action= 'deliver_order')
GROUP BY date(time)
ORDER BY date
), 
total_couriers_table as (
SELECT date(time) AS date, COUNT(DISTINCT courier_id) as totsl_couriers
FROM courier_actions
GROUP BY date(time)
ORDER BY date
),
users_table as 
(SELECT date, paying_users, total_users  
FROM paying_users_table 
left join total_user_table 
USING(date)
),
couriers_table as (
SELECT date, active_couriers, totsl_couriers  
FROM active_couriers_table 
left join total_couriers_table 
USING(date)
),
total_active_table as (
SELECT date, paying_users, active_couriers
FROM users_table LEFT JOIN couriers_table USING(date)
),
result_table as (
SELECT date, paying_users, active_couriers, total_users, total_couriers
FROM total_active_table LEFT JOIN total_new_table USING(date)
)


SELECT date, paying_users, active_couriers,
ROUND(100*(paying_users::DECIMAL/total_users),2) AS paying_users_share,
ROUND(100*(active_couriers::DECIMAL/total_couriers),2) AS active_couriers_share
FROM result_table
ORDER BY date



#Второй вариант:
SELECT date,
       paying_users,
       active_couriers,
       round(100 * paying_users::decimal / total_users, 2) as paying_users_share,
       round(100 * active_couriers::decimal / total_couriers, 2) as active_couriers_share
FROM   (SELECT start_date as date,
               new_users,
               new_couriers,
               (sum(new_users) OVER (ORDER BY start_date))::int as total_users,
               (sum(new_couriers) OVER (ORDER BY start_date))::int as total_couriers
        FROM   (SELECT start_date,
                       count(courier_id) as new_couriers
                FROM   (SELECT courier_id,
                               min(time::date) as start_date
                        FROM   courier_actions
                        GROUP BY courier_id) t1
                GROUP BY start_date) t2
            LEFT JOIN (SELECT start_date,
                              count(user_id) as new_users
                       FROM   (SELECT user_id,
                                      min(time::date) as start_date
                               FROM   user_actions
                               GROUP BY user_id) t3
                       GROUP BY start_date) t4 using (start_date)) t5
    LEFT JOIN (SELECT time::date as date,
                      count(distinct courier_id) as active_couriers
               FROM   courier_actions
               WHERE  order_id not in (SELECT order_id
                                       FROM   user_actions
                                       WHERE  action = 'cancel_order')
               GROUP BY date) t6 using (date)
    LEFT JOIN (SELECT time::date as date,
                      count(distinct user_id) as paying_users
               FROM   user_actions
               WHERE  order_id not in (SELECT order_id
                                       FROM   user_actions
                                       WHERE  action = 'cancel_order')
               GROUP BY date) t7 using (date)


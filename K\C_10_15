#На основе информации в таблицах orders и products рассчитайте ежедневную выручку сервиса и 
отразите её в колонке daily_revenue. Затем с помощью оконных функций и функций смещения 
посчитайте ежедневный прирост выручки. Прирост выручки отразите как в абсолютных значениях, 
так и в % относительно предыдущего дня. 

with t1 as (SELECT order_id,
                   creation_time,
                   unnest (product_ids) as product_id,
                   date_trunc('day', creation_time)::date
            FROM   orders
            WHERE  order_id not in (SELECT order_id
                                    FROM   user_actions
                                    WHERE  action = 'cancel_order')), t2 as (SELECT order_id,
                                                creation_time,
                                                sum(price) as price
                                         FROM   t1
                                             LEFT JOIN products using(product_id)
                                         GROUP BY order_id, creation_time), t3 as(SELECT order_id,
                                                creation_time,
                                                date(creation_time) as date,
                                                sum (price) OVER (PARTITION BY order_id)::decimal as order_price,
                                                sum (price) OVER (PARTITION BY date_trunc('day',
                                                                                          creation_time))::decimal as daily_revenue,
                                                round(100*sum (price) OVER (PARTITION BY order_id)::decimal / sum (price) OVER (PARTITION BY date_trunc('day', creation_time))::decimal,
                                                      3) as percentage_of_daily_revenue
                                         FROM   t2
                                         ORDER BY creation_time::date desc, percentage_of_daily_revenue desc, order_id)
SELECT date,
       daily_revenue,
       coalesce(daily_revenue - lag(daily_revenue) OVER (ORDER BY date),
                0) as revenue_growth_abs,
       coalesce(round(100*(daily_revenue - lag(daily_revenue) OVER (ORDER BY date))/lag(daily_revenue) OVER (ORDER BY date), 1),
                0) as revenue_growth_percentage
FROM   t3
GROUP BY date, daily_revenue
ORDER BY date


#Второй вариант:
SELECT date,
       round(daily_revenue, 1) as daily_revenue,
       round(coalesce(daily_revenue - lag(daily_revenue, 1) OVER (ORDER BY date), 0),
             1) as revenue_growth_abs,
       round(coalesce(round((daily_revenue - lag(daily_revenue, 1) OVER (ORDER BY date))::decimal / lag(daily_revenue, 1) OVER (ORDER BY date) * 100, 2), 0),
             1) as revenue_growth_percentage
FROM   (SELECT date(creation_time) as date,
               sum(price) as daily_revenue
        FROM   (SELECT order_id,
                       creation_time,
                       product_ids,
                       unnest(product_ids) as product_id
                FROM   orders
                WHERE  order_id not in (SELECT order_id
                                        FROM   user_actions
                                        WHERE  action = 'cancel_order')) t1
            LEFT JOIN products using(product_id)
        GROUP BY date) t2
ORDER BY date

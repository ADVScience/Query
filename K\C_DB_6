#На основе данных в таблицах user_actions, courier_actions и orders для каждого дня рассчитайте следующие показатели:
Число платящих пользователей на одного активного курьера.
Число заказов на одного активного курьера.
@@@(Платящими по-прежнему считаем тех пользователей, которые в данный день оформили хотя бы один заказ, 
который в дальнейшем не был отменен.
Курьеров считаем активными, если в данный день они приняли хотя бы один заказ, который был доставлен 
(возможно, уже на следующий день), или доставили любой заказ.)@@@

with
paying_users_table as (
SELECT date(time) AS date, COUNT(DISTINCT user_id) as paying_users
FROM user_actions
WHERE order_id NOT IN ( SELECT order_id FROM user_actions WHERE action= 'cancel_order')
GROUP BY date(time)
ORDER BY date),

active_couriers_table as (
SELECT date(time) AS date, COUNT(DISTINCT courier_id) as active_couriers
FROM courier_actions
WHERE order_id IN ( SELECT order_id FROM courier_actions WHERE action= 'deliver_order')
GROUP BY date(time)
ORDER BY date),

count_orders as (
SELECT creation_time::DATE AS DATE, COUNT(DISTINCT order_id) AS count_order
FROM orders
WHERE order_id NOT IN ( SELECT order_id FROM user_actions WHERE action= 'cancel_order')
GROUP BY DATE
)

SELECT paying_users_table.DATE, 
ROUND((paying_users::DECIMAL/active_couriers),2) AS users_per_courier,
ROUND((count_order::DECIMAL/active_couriers),2) AS orders_per_courier
FROM paying_users_table 
LEFT JOIN active_couriers_table USING (DATE)
LEFT JOIN count_orders USING (DATE)

#Второй вариант:

SELECT date,
       round(paying_users::decimal / couriers, 2) as users_per_courier,
       round(orders::decimal / couriers, 2) as orders_per_courier
FROM   (SELECT time::date as date,
               count(distinct courier_id) as couriers
        FROM   courier_actions
        WHERE  order_id not in (SELECT order_id
                                FROM   user_actions
                                WHERE  action = 'cancel_order')
        GROUP BY date) t1 join (SELECT creation_time::date as date,
                               count(distinct order_id) as orders
                        FROM   orders
                        WHERE  order_id not in (SELECT order_id
                                                FROM   user_actions
                                                WHERE  action = 'cancel_order')
                        GROUP BY date) t2 using (date) join (SELECT time::date as date,
                                            count(distinct user_id) as paying_users
                                     FROM   user_actions
                                     WHERE  order_id not in (SELECT order_id
                                                             FROM   user_actions
                                                             WHERE  action = 'cancel_order')
                                     GROUP BY date) t3 using (date)
ORDER BY date
